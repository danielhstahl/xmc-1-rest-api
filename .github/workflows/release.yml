name: release
on:
  push:
    branches:
      master

jobs:
  build: 
    runs-on: ubuntu-latest
    name: release ${{ matrix.target }}
    strategy:
      fail-fast: false
      matrix:
        target: 
        - x86_64-unknown-linux-musl
        - armv7-unknown-linux-gnueabihf
        - aarch64-unknown-linux-gnu
    steps:
    - uses: actions/checkout@v2
    - name: Install Rust
      run: |
        curl -L https://github.com/cross-rs/cross/releases/download/v0.2.5/cross-x86_64-unknown-linux-gnu.tar.gz -o cross-x86_64-unknown-linux-gnu.tar.gz
        tar -xvzf cross-x86_64-unknown-linux-gnu.tar.gz
        rustup update stable
    - name: Compile
      run: |
        ./cross build --release --target ${{ matrix.target }}

    - name: upload binary
      uses: actions/upload-artifact@v3
      with:
        name: xmc1_rest_api-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/xmc1_rest_api
        
  tests:
    
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run tests stable
      run: |
        rustup update stable
        cargo test
        
  build-ui:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: compile client
      working-directory: xmc-remote
      env:
        NODE_ENV: production
      run: |
        npm ci
        npm run build
        zip -qq -r build.zip build
    - name: upload ui zip
      uses: actions/upload-artifact@v3
      with:
        name: build.zip
        path: xmc-remote/build.zip

  release:
    needs: [build, build-ui]
    runs-on: ubuntu-latest
    permissions:
      contents: write # release changes require contents write
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@v1
      id: tag_bump
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v3
    - name: list directory
      run: |
        ls -la
    - name: Upload to release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: release ${{ steps.tag_bump.outputs.new_tag }}
        tag_name: ${{ steps.tag_bump.outputs.new_tag }}
        files: |
          xmc1_rest_api*
          build.zip
